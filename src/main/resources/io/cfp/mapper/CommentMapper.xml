<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.cfp.mapper.CommentMapper">

    <insert id="insert" parameterType="io.cfp.model.Comment"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into comments (comment, added, internal, proposal, user, event_id)
        values (#{comment}, #{added}, #{internal}, #{proposalId}, #{user.id}, #{eventId})
    </insert>

    <select id="findAll" parameterType="io.cfp.model.queries.CommentQuery" resultType="io.cfp.model.Comment">
        SELECT *,
            c.proposal as "proposalId",
            u.id as "user.id",
            u.email as "user.email",
            u.firstname as "user.firstname",
            u.lastname as "user.lastname"
        FROM comments c
        LEFT OUTER JOIN users u on c.user = u.id
        <where>
            <if test="eventId">
                c.event_id = #{eventId}
            </if>
            <if test="proposalId">
                AND c.proposal = #{proposalId}
            </if>
            <if test="internal != null">
                AND c.internal = #{internal};
            </if>
        </where>
    </select>

    <select id="findById" resultType="io.cfp.model.Comment">
        SELECT *,
            c.proposal as "proposalId",
            u.id as "user.id",
            u.email as "user.email",
            u.firstname as "user.firstname",
            u.lastname as "user.lastname"
        FROM comments c
        LEFT OUTER JOIN users u on c.user = u.id
        WHERE c.id = #{id} AND c.event_id = #{eventId}
    </select>

    <update id="update" parameterType="io.cfp.model.Comment">
        UPDATE comments SET
            comment = #{comment},
            added = #{added}
        WHERE id = #{id}
        AND event_id = #{eventId}
        AND proposal = #{proposalId}
        AND `user` = #{user.id}
    </update>

    <update id="updateEventId">
        UPDATE comments SET
        event_id = #{eventId}
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="io.cfp.model.Comment">
        DELETE FROM comments WHERE id = #{id}
        AND event_id = #{eventId}
        AND proposal = #{proposalId}
        AND `user` = #{user.id}
    </delete>

</mapper>
